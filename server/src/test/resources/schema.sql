CREATE TABLE PUBLIC.PACKAGES_HATS
(
    ID           INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 0) NOT NULL PRIMARY KEY,
    PACKAGE_NAME VARCHAR(255),
    PACKAGE_TYPE INTEGER,
    VALID        BOOLEAN DEFAULT FALSE                                   NOT NULL,
    AUTHOR_ID    INTEGER                                                 NOT NULL
);
CREATE TABLE PUBLIC.PACKAGES_ALIASES
(
    ID     BIGINT      GENERATED BY DEFAULT AS IDENTITY (START WITH 0) NOT NULL PRIMARY KEY,
    HAT_ID INTEGER     NOT NULL,
    ALIAS  VARCHAR(30) NOT NULL,
    FOREIGN KEY (HAT_ID) REFERENCES PACKAGES_HATS (ID)
);
CREATE TABLE PUBLIC.LICENCES
(
    ID   INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 0) NOT NULL PRIMARY KEY,
    NAME VARCHAR(255)
);
CREATE TABLE PACKAGES_INFO
(
    PACKAGE_ID    INTEGER                             NOT NULL,
    VERSION_ID    INTEGER                             NOT NULL,
    LICENCE_TYPE  INTEGER,
    VERSION_LABEL VARCHAR(255),
    CREATE_TIME   TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    PRIMARY KEY (PACKAGE_ID, VERSION_ID),
    FOREIGN KEY (PACKAGE_ID) REFERENCES PACKAGES_HATS (ID),
    FOREIGN KEY (LICENCE_TYPE) REFERENCES LICENCES (ID)
);
CREATE TABLE PUBLIC.DEPENDENCIES
(
    PACKAGE_ID         INTEGER NOT NULL,
    VERSION_ID         INTEGER NOT NULL,
    DEPENDENCY_PACKAGE INTEGER NOT NULL,
    DEPENDENCY_VERSION INTEGER NOT NULL
);
CREATE TABLE PACKAGES_TYPES
(
    ID        INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 0) NOT NULL PRIMARY KEY,
    TYPE_NAME VARCHAR(255)
);
CREATE TABLE PUBLISHER_INFO
(
    ID     INTEGER     NOT NULL PRIMARY KEY,
    AUTHOR VARCHAR(80) NOT NULL,
    EMAIL  VARCHAR(80) NOT NULL
);
CREATE TABLE PUBLISHER_SECURITY_INFO
(
    ID   INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 0) NOT NULL PRIMARY KEY,
    HASH VARCHAR(45),
    SALT VARCHAR(45)                                         NOT NULL,
    FOREIGN KEY (ID) REFERENCES PUBLISHER_INFO (ID)
);
CREATE TABLE ARCHIVES
(
    ID   INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 0) NOT NULL PRIMARY KEY,
    TYPE VARCHAR(40)                                             NOT NULL
);
CREATE TABLE PACKAGES_PAYLOADS
(
    PACKAGE_ID   INTEGER      NOT NULL,
    VERSION_ID   INTEGER      NOT NULL,
    ARCHIVE_TYPE INTEGER      NOT NULL,
    PAYLOAD_SIZE BIGINT       NOT NULL,
    PATH         VARCHAR(255) NOT NULL,
    CONSTRAINT INSTANCE_PAYLOAD FOREIGN KEY (PACKAGE_ID, VERSION_ID) REFERENCES PACKAGES_INFO (PACKAGE_ID, VERSION_ID),
    FOREIGN KEY (ARCHIVE_TYPE) REFERENCES ARCHIVES (ID)
);
-- ALTER TABLE DEPENDENCIES
--     ADD CONSTRAINT DEPENDENCY_ID FOREIGN KEY (PACKAGE_ID, VERSION_ID) REFERENCES PACKAGES_INFO (PACKAGE_ID, VERSION_ID);
-- ALTER TABLE DEPENDENCIES
--     ADD CONSTRAINT INSTANCE_ID FOREIGN KEY (DEPENDENCY_PACKAGE, DEPENDENCY_VERSION) REFERENCES PACKAGES_INFO (PACKAGE_ID, VERSION_ID);
-- ALTER TABLE PACKAGES_HATS
--     ADD FOREIGN KEY (PACKAGE_TYPE) REFERENCES PACKAGES_TYPES (ID);
-- ALTER TABLE PACKAGES_HATS
--     ADD FOREIGN KEY (AUTHOR_ID) REFERENCES PUBLISHER_INFO (ID);