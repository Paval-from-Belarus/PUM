CREATE TABLE PACKAGES_ALIASES
(
    ID    INTEGER     NOT NULL,
    ALIAS VARCHAR(30) NOT NULL
);
CREATE TABLE DEPENDENCIES
(
    PACKAGE_ID         INTEGER NOT NULL,
    VERSION_ID         INTEGER NOT NULL,
    DEPENDENCY_PACKAGE INTEGER NOT NULL,
    DEPENDENCY_VERSION INTEGER NOT NULL
);
CREATE TABLE LICENCES
(
    ID   INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 0) NOT NULL PRIMARY KEY,
    NAME VARCHAR(255)
);
CREATE TABLE PACKAGES_HATS
(
    ID           INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 1) NOT NULL PRIMARY KEY,
    PACKAGE_NAME VARCHAR(255),
    PACKAGE_TYPE INTEGER,
    VALID        BOOLEAN DEFAULT FALSE                                   NOT NULL,
    AUTHOR_ID    INTEGER                                                 NOT NULL
);
CREATE TABLE PACKAGES_INFO
(
    PACKAGE_ID    INTEGER                             NOT NULL,
    VERSION_ID    INTEGER                             NOT NULL,
    LICENCE_TYPE  INTEGER,
    VERSION_LABEL VARCHAR(255),
    CREATE_TIME   TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    PRIMARY KEY (PACKAGE_ID, VERSION_ID),
    FOREIGN KEY (PACKAGE_ID) REFERENCES PUBLIC.PACKAGES_HATS (ID),
    FOREIGN KEY (LICENCE_TYPE) REFERENCES PUBLIC.LICENCES (ID)
);
CREATE TABLE PACKAGES_TYPES
(
    ID        INTEGER GENERATED ALWAYS AS IDENTITY (START WITH 0) NOT NULL PRIMARY KEY,
    TYPE_NAME VARCHAR(255)
);
CREATE TABLE PUBLISHERS_INFO
(
    ID     INTEGER     NOT NULL PRIMARY KEY,
    AUTHOR VARCHAR(80) NOT NULL,
    EMAIL  VARCHAR(80) NOT NULL,
    HASH   VARCHAR(45),
    SALT   VARCHAR(45) NOT NULL
);
CREATE TABLE ARCHIVES
(
    ID   INTEGER GENERATED BY DEFAULT AS IDENTITY (START WITH 0) NOT NULL PRIMARY KEY,
    TYPE VARCHAR(40)                                             NOT NULL
);